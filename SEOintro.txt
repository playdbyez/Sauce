#####################################################
###### Search Engine Optimization Sites ############
#####################################################


//Keyword Research

.soovle
.googlekeywordplanner
.wordstream.com/keywoordtools
.ubersuggest.io
====================================

//Crawlers

.deepcrawl
.screamingfrog
.robhammond'sseocrawlers
===================================

//Link Building

.majesticseo
.opensuite (moz)
.rmoov (google disavow tool)
===================================

//Site Speed

.gtmetrix
.daraboost
.google pagespeed
.yahoo! yslow
==================================

//Content Optimization

.grammarly
.siteliner
.hootsuite
.buzzsumo
===================================

//Site Audits

.woorank
.seo sitecheckup
==================================


#####################################
###### Social Media Marketing ######
####################################

//Features

>Brand Awareness / Audience Catoring
>Interactions / Ask Questions
>Redirects / Have a Webpage
>Promotions / Customer Promotion / News
>Localization Features / Exclusivity For Business & Customers
>Blogs, Wallpapers, Whitepapers, Case Studies, Ringtones, Stickers, Memes, Vacinity News, Fanpages, Reviews, Company Culture, Marketing News


//Ranking Matrics

>Content
>Metadata
>Semantics
>Localization
>Fonts
>Refresh Rate
>Bounce-off Rate
>Tags
>Links
>Loading Time
>Downloads




#####################################
###### Search Engines #############
####################################

>Google       >Yandex       >AOL
>Bing         >Naver        >Ilse 
>Baidu        >DeepDyve     >Lycos
>Yahoo!       >DuckDuckGo   >WebDE
>Goo          >Ask          >EarthLink
>EntireWeb    >Seznam       >Qwant
>Search.com   >Rambler      >Biglobe
>Ecosia       >Dogpile      >Daum
>Excite




############################################
####### SEARCH ENGINE PROCESSES ##########
###########################################


		<1> Crawlers/Spiders
	<2> Indexing
<3> Searching


//Crawlers
Crawlers copy hyperlinks on sites to help update their index of content for its web engine.

>Use robots.txt files.
>Help with advertising your key-words.
>Specify which pages of your site to index by the crawlers as pages not containing key-words as advertisements aren't relevant to crawlers.


I.E.
.googlebot
.bingbot
.sphinx





//Indexing
The process of engines colecting, parsing and storing data of websites to match search queries quicker


>Vary from engine to engine.
>Non-disclosed algorithms.
>comes in two varieties

=========================================================

	>>Forward Indexing
Lists webpages.
Which words appear inside.

(Page: Amazon)
(Words: Buy, Review, Share, Deliver)



	>>Inverted Indexing
Lists words.
Which webpages those words belong to.

(Word: Review)
(Pages: Youtube, Yelp, Amazon, Uber eats)

=========================================================




//Searching
User enters relevant string of words to retrieve content from Search Engine Results, pre-indexed by spiders.
Results are matched to search queries based in an non-disclosed algorithm used by the Search Engine for its results.


	>>Navigational Search
SPECIFIC to its end point to a website.
(USER is SEARCHING)


	>>Informational Search
GENERIC to broaden knowledge in a topic.
(USER is RESEARCHING)	

	>>Transactional Search
FOCUSED on transactions.
(USER is BUYING)

=========================================================


Domain Deployment

[] Encode input/output and data sources to common character set before processing requests
[] Validate authentication data only if all input was supplied
[] Validate data from redirects
[] Use an allowed list for data types
[] Sanitize untrusted data queries for SQL, XML and LDAP
[] Conduct input validation and output encoding on server-side
[] Specify character encoding for all connections

[] Canonicalization entails specifing a single character set as encoding for connections and output/input data
[] Canonicalization is an effective way of addressing obfuscation attacks

[] Header values for requests and responses should contain only ASCII
[] Refer headers should never be a sole method of validation as they can be spoofed
[] Disable unecessary HTTP methods
[] Define which HTTP method to support and if it will be handled differently per page (GET or POST)
[] Only use POST requests to transmit authentication credentials
[] System information must be removed from HTTP response headers (OS information, Webserver version, application framework information)
[] Sensitive information must be removed from the HTTP referer to external services

[] Utilize a single configured TLS implementation for HTTP connections 
[] TLS should implement domain checks, expiration checks and intermediate certificate checks
[] Set cookies attribute to 'secure' when used over TLS
[] Set cookies attribute to 'HTTP only' 
[] Authenticate session identifiers contained in cookies must have a restricted value for its path and domain

[] Session identifiers require randomization algorithms
[] Session identifiers should not appear in the url
[] Generate session identifiers and periodically deactivate old ones
[] Generate a new session identifier upon reauthentication and 
[] Generate a new session identifier when HTTPS changes to HTTP connection

[] Limit the number of user actions per hour in order to deter automated attacks
[] Log user out if the session is active for too long
[] Reauthenticate user prior to critical operations
[] Enforce account disabling after several login attempts
[] Enforce a cool-down time for password resets
[] Do not allow concurrent log ins of the same user
[] Notify users of password reset
[] Prevent state tempering on client-side data

[] Place directories not meant for public indexing in an isolated parent dir
[] Prevent disclosure of dir structure from robots.txt
[] Turn off directory listings


[] Manage hashing authentication from server-side
[] Authentication failures should not indicate which section was incorrect
[] Disable unused accounts via account auditing
[] Server-side operations must support per sesssion strong random tokens
[] Generation of session identifiers must occur on server-side
[] Session management controls should identify only its own authorized identifiers as valid
[] Credential for external services must be store securely and connected only over TLS
[] Alter default parameters when implementing third-party authentication code
[] Inspect third-party code for known vulnerabilities
[] Utilize an Asset Management System for registering system components
[] Utilize an Asset Management System for software listing
[] Utilize a Software Change Control System to log changes made to development and production code
[] Restrict any access to direct object references
[] Enforce authorization controls on every request including server-side scripts
[] The access control rules on server and presentation layer must match

